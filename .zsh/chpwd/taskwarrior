if ! _command_exists task; then
	return
fi

# `task context` wrapper with support for env variable TCS silencing it.
function _task_set_context() {
	if [[ "$_chpwd_taskwarrior_context" == "default" ]] || [[ "$_chpwd_taskwarrior_context" == "home" ]]; then
		eval 'tm(){task "$@";}'
	else
		# I disable the output because this may fail due to:
		# https://github.com/GothenburgBitFactory/taskwarrior/issues/2219
		eval "tm(){task $(task _get rc.context."$_chpwd_taskwarrior_context" 2> /dev/null) "'"$@";}'
	fi
	eval "t(){task rc.context=$_chpwd_taskwarrior_context "'"$@";}'
	eval "tfzf(){taskfzf rc.context=$_chpwd_taskwarrior_context "'"$@";}'
}

# global variables for this function
# ==================================
#
# This one holds all the directories exactly as written in the contexts file so
# they could be matched against PWD vs $(pwd -P) and only if no match is found,
# we update the contexts file with the `readlink` equivalents
_chpwd_taskwarrior_parent_dirs=()
# for the current context
_chpwd_taskwarrior_context=""
# for the current context options (currently, only 'redirect-link' is read)
_chpwd_taskwarrior_context_options=()
# for skipping setting the context when we dive into a recursive cd because of cd $(pwd -P)
_chpwd_skip_setting_context=0
_chpwd_set_task_context(){
	if (( $_chpwd_skip_setting_context )); then
		_chpwd_skip_setting_context=0
		return
	fi
	_chpwd_task_contexts_parser ~/.local/share/tasks/contexts.txt
	local realpwd
	if [[ -h "$PWD" ]]; then
		realpwd="$(pwd -P)"
	fi
	if [[ ! -z "$_chpwd_taskwarrior_context_options" ]]; then
		local context_opt
		unset GIT_SEND_MAIL_TO
		for context_opt in "${_chpwd_taskwarrior_context_options[@]}"; do
			if [[ "$context_opt" == "redirect-link" && ! -z "$realpwd" ]]; then
				echo redirect link
				_chpwd_skip_setting_context=1
			fi
			if [[ "$context_opt" =~ "patches_mailing_list=" ]]; then
				export GIT_SEND_MAIL_TO="${context_opt#patches_mailing_list\=}"
			fi
		done
	fi
	if [[ -n "$realpwd" ]]; then
		local roots update_symlink
		update_symlink=1
		for root in "${_chpwd_taskwarrior_parent_dirs[@]}"; do
			if [[ "${realpwd}" =~ "${root}" ]]; then
				update_symlink=0
				break
			fi
		done
		if (($update_symlink)); then
			echo _chpwd_set_task_context: updating symlink in contexts file
			sed -i -e "s#$PWD#$realpwd $PWD#g" ~/.local/share/tasks/contexts.txt
		fi
	fi
	_task_set_context
	if (($_chpwd_skip_setting_context)); then
		cd "$realpwd"
	fi
}

zmodload zsh/system
zmodload -F zsh/stat b:zstat

function _chpwd_task_contexts_parser() {
	emulate -L zsh -o extended_glob -o no_unset -o warn_create_global -o warn_nested_var

	local -H stat
	zstat -H stat -- $1 || return
	local sig="$stat[inode] $stat[mtime] $stat[size]"

	if [[ $sig != ${_chpwd_taskwarrior_cached_sig-} ]]; then
		# Context file has changed. Parse it into _chpwd_taskwarrior_cached_{name,dirs,opts}.
		() {
			local buf
			local -i err
			local -a match mbegin mend
			while :; do
				sysread 'buf[$#buf+1]'
				err=$?
				if (( err == 5 )); then
					buf+=$'\n'  # EOF
				elif (( err )); then
					return err
				fi
				[[ $buf == (#b)*$'\n'context.([a-zA-Z0-9._-]##)=[^#]#'# '(/[^$'\n']#)$'\n'* ]] && break
				(( err == 5 )) && break  # EOF
				buf=${buf##*$'\n'}
			done < $1
			typeset -g _chpwd_taskwarrior_cached_name=${match[1]-}
			# Note: (z) without (Q) on the next line is likely a bug.
			typeset -ga _chpwd_taskwarrior_cached_dirs=(${(z)match[2]-})
			if [[ ${_chpwd_taskwarrior_cached_dirs[-1]-} == options:* ]]; then
				typeset -ga _chpwd_taskwarrior_cached_opts=(
						${(s:,:)_chpwd_taskwarrior_cached_dirs[-1]#options:})
				_chpwd_taskwarrior_cached_dirs[-1]=()
			fi
		} $1 || return
		typeset -g _chpwd_taskwarrior_cached_sig=$sig
	fi

	# Set _chpwd_taskwarrior_{context,parent_dirs,context_options} based
	# on _chpwd_taskwarrior_cached_{name,dirs,opts}.
	local dirs=(${^_chpwd_taskwarrior_cached_dirs}(-/N))
	if (( $#dirs )) && [[ $PWD/ == (${~${(j:|:)${(b)dirs}}})/* ]]; then
		typeset -g _chpwd_taskwarrior_context=$_chpwd_taskwarrior_cached_name
		typeset -ga _chpwd_taskwarrior_parent_dirs=($dirs)
		typeset -ga _chpwd_taskwarrior_context_options=($_chpwd_taskwarrior_cached_opts)
	else
		unset _chpwd_taskwarrior_parent_dirs _chpwd_taskwarrior_context_options
		if [[ ${NETWORK_NAME-} == *Home* ]]; then
			typeset -g _chpwd_taskwarrior_context=home
		else
			typeset -g _chpwd_taskwarrior_context=default
		fi
	fi
}

typeset -ag chpwd_functions
chpwd_functions+=_chpwd_set_task_context
_chpwd_set_task_context

# vim:ft=zsh
